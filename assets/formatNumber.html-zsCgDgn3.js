import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-CDG-wEGk.js";const p={},e=t(`<h1 id="格式化输入框" tabindex="-1"><a class="header-anchor" href="#格式化输入框"><span>格式化输入框</span></a></h1><h2 id="限制输入框-只能输入数字-并保留小数位" tabindex="-1"><a class="header-anchor" href="#限制输入框-只能输入数字-并保留小数位"><span>限制输入框，只能输入数字，并保留小数位</span></a></h2><p>::: vue-playground Vue 交互演示</p><p>@file App.vue</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">const</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token operator">=</span> Vue

  <span class="token keyword">const</span> inputValue <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>

  <span class="token comment">//限制数字，保留小数位decimalPlaces</span>
  <span class="token keyword">const</span> <span class="token function-variable function">formatNumber</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">decimalPlaces <span class="token operator">=</span> <span class="token number">2</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> num <span class="token operator">==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span>
      num <span class="token operator">=</span> num<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[^\\-\\d.]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token comment">//清除&quot;数字&quot;和&quot;.&quot;以及&quot;-&quot;以外的字符</span>
      num <span class="token operator">=</span> num<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\.</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token comment">//验证第一个字符是数字</span>
      num <span class="token operator">=</span> num<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;$#$&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;$#$&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span> <span class="token comment">//只能有一个小数点</span>
      <span class="token comment">// num = num.replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, &quot;$1$2.$3&quot;); //只能输入两个小数</span>

      <span class="token keyword">const</span> regex <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">^(\\\\-)*(\\\\d+)\\\\.(\\\\d{</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>decimalPlaces<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">}).*</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> num<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>regex<span class="token punctuation">,</span> <span class="token string">&#39;$1$2.$3&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>:::</p>`,6),o=[e];function c(l,u){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","formatNumber.html.vue"]]),g=JSON.parse(`{"path":"/note/js/formatNumber.html","title":"格式化输入框","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2022-01-01T00:00:00.000Z","category":["util"],"tag":["formatter","number"],"description":"格式化输入框 限制输入框，只能输入数字，并保留小数位 ::: vue-playground Vue 交互演示 @file App.vue :::","head":[["meta",{"property":"og:url","content":"https://xxdlh.github.io/note/js/formatNumber.html"}],["meta",{"property":"og:site_name","content":"文档演示"}],["meta",{"property":"og:title","content":"格式化输入框"}],["meta",{"property":"og:description","content":"格式化输入框 限制输入框，只能输入数字，并保留小数位 ::: vue-playground Vue 交互演示 @file App.vue :::"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-18T03:09:53.000Z"}],["meta",{"property":"article:author","content":"星星的泪痕"}],["meta",{"property":"article:tag","content":"formatter"}],["meta",{"property":"article:tag","content":"number"}],["meta",{"property":"article:published_time","content":"2022-01-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-18T03:09:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"格式化输入框\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-01-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-18T03:09:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"星星的泪痕\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"限制输入框，只能输入数字，并保留小数位","slug":"限制输入框-只能输入数字-并保留小数位","link":"#限制输入框-只能输入数字-并保留小数位","children":[]}],"git":{"createdTime":1718680193000,"updatedTime":1718680193000,"contributors":[{"name":"薛涛涛","email":"xxdlhxue@163.com","commits":1}]},"readingTime":{"minutes":0.58,"words":173},"filePathRelative":"note/js/formatNumber.md","localizedDate":"2022年1月1日","excerpt":"\\n<h2>限制输入框，只能输入数字，并保留小数位</h2>\\n<p>::: vue-playground Vue 交互演示</p>\\n<p>@file App.vue</p>\\n<div class=\\"language-vue\\" data-ext=\\"vue\\" data-title=\\"vue\\"><pre class=\\"language-vue\\"><code><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>template</span><span class=\\"token punctuation\\">&gt;</span></span>\\n  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>div</span><span class=\\"token punctuation\\">&gt;</span></span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>input</span> <span class=\\"token punctuation\\">/&gt;</span></span>\\n  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>div</span><span class=\\"token punctuation\\">&gt;</span></span>\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>template</span><span class=\\"token punctuation\\">&gt;</span></span>\\n\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>script</span> <span class=\\"token attr-name\\">setup</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token script\\"><span class=\\"token language-javascript\\">\\n  <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">{</span> ref <span class=\\"token punctuation\\">}</span> <span class=\\"token operator\\">=</span> Vue\\n\\n  <span class=\\"token keyword\\">const</span> inputValue <span class=\\"token operator\\">=</span> <span class=\\"token function\\">ref</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">''</span><span class=\\"token punctuation\\">)</span>\\n\\n  <span class=\\"token comment\\">//限制数字，保留小数位decimalPlaces</span>\\n  <span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">formatNumber</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">decimalPlaces <span class=\\"token operator\\">=</span> <span class=\\"token number\\">2</span></span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">num</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>num <span class=\\"token operator\\">==</span> <span class=\\"token keyword\\">null</span> <span class=\\"token operator\\">||</span> num <span class=\\"token operator\\">==</span> <span class=\\"token keyword\\">undefined</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span> <span class=\\"token string\\">''</span>\\n      num <span class=\\"token operator\\">=</span> num<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">replace</span><span class=\\"token punctuation\\">(</span><span class=\\"token regex\\"><span class=\\"token regex-delimiter\\">/</span><span class=\\"token regex-source language-regex\\">[^\\\\-\\\\d.]</span><span class=\\"token regex-delimiter\\">/</span><span class=\\"token regex-flags\\">g</span></span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">''</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">//清除\\"数字\\"和\\".\\"以及\\"-\\"以外的字符</span>\\n      num <span class=\\"token operator\\">=</span> num<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">replace</span><span class=\\"token punctuation\\">(</span><span class=\\"token regex\\"><span class=\\"token regex-delimiter\\">/</span><span class=\\"token regex-source language-regex\\">^\\\\.</span><span class=\\"token regex-delimiter\\">/</span><span class=\\"token regex-flags\\">g</span></span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">''</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">//验证第一个字符是数字</span>\\n      num <span class=\\"token operator\\">=</span> num<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">replace</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'.'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'$#$'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">replace</span><span class=\\"token punctuation\\">(</span><span class=\\"token regex\\"><span class=\\"token regex-delimiter\\">/</span><span class=\\"token regex-source language-regex\\">\\\\.</span><span class=\\"token regex-delimiter\\">/</span><span class=\\"token regex-flags\\">g</span></span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">''</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">replace</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'$#$'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'.'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">//只能有一个小数点</span>\\n      <span class=\\"token comment\\">// num = num.replace(/^(\\\\-)*(\\\\d+)\\\\.(\\\\d\\\\d).*$/, \\"$1$2.$3\\"); //只能输入两个小数</span>\\n\\n      <span class=\\"token keyword\\">const</span> regex <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">RegExp</span><span class=\\"token punctuation\\">(</span><span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">\`</span><span class=\\"token string\\">^(\\\\\\\\-)*(\\\\\\\\d+)\\\\\\\\.(\\\\\\\\d{</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>decimalPlaces<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">}).*</span><span class=\\"token template-punctuation string\\">\`</span></span><span class=\\"token punctuation\\">)</span>\\n      <span class=\\"token keyword\\">return</span> num<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toString</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">replace</span><span class=\\"token punctuation\\">(</span>regex<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'$1$2.$3'</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n</span></span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>script</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</code></pre></div>","autoDesc":true}`);export{k as comp,g as data};
