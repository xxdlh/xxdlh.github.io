import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o,c as l,a as c,b as n,f as s,d as i,e as a}from"./app-CDG-wEGk.js";const r={},u=a(`<h2 id="高德地图-绘制区域遮罩及边界线" tabindex="-1"><a class="header-anchor" href="#高德地图-绘制区域遮罩及边界线"><span>高德地图 绘制区域遮罩及边界线</span></a></h2><h3 id="_1-通过-amap-districtsearch-搜索获取区域边界点-利用边界点信息通过-amap-polygon-绘制多边形" tabindex="-1"><a class="header-anchor" href="#_1-通过-amap-districtsearch-搜索获取区域边界点-利用边界点信息通过-amap-polygon-绘制多边形"><span>1.通过 AMap.DistrictSearch 搜索获取区域边界点，利用边界点信息通过 AMap.Polygon 绘制多边形</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">//行政区划查询</span>
<span class="token keyword">var</span> opts <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// level: &#39;province&#39;,// 设置查询行政区级别</span>
  <span class="token literal-property property">showbiz</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//最后一级返回街道信息</span>
  <span class="token literal-property property">extensions</span><span class="token operator">:</span> <span class="token string">&#39;all&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 返回行政区边界坐标点</span>
  <span class="token literal-property property">subdistrict</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token comment">//返回下一级行政区</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> district <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AMap<span class="token punctuation">.</span>DistrictSearch</span><span class="token punctuation">(</span>opts<span class="token punctuation">)</span> <span class="token comment">//注意：需要使用插件同步下发功能才能这样直接使用</span>

<span class="token comment">//行政区查询</span>
district<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token string">&#39;太原市&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">status<span class="token punctuation">,</span> result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> <span class="token string">&#39;complete&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 绘制区域</span>
    <span class="token keyword">let</span> polygons <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">//绘制区域面积图的数组</span>
    <span class="token keyword">var</span> bounds <span class="token operator">=</span> result<span class="token punctuation">.</span>districtList<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>boundaries
    <span class="token keyword">if</span> <span class="token punctuation">(</span>bounds<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> bounds<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> polygon <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AMap<span class="token punctuation">.</span>Polygon</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">map</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>map<span class="token punctuation">,</span>
          <span class="token literal-property property">strokeWeight</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
          <span class="token literal-property property">strokeColor</span><span class="token operator">:</span> <span class="token string">&#39;#00FF00&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">fillColor</span><span class="token operator">:</span> <span class="token string">&#39;#099F3D&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">fillOpacity</span><span class="token operator">:</span> <span class="token number">0.3</span><span class="token punctuation">,</span>
          <span class="token literal-property property">path</span><span class="token operator">:</span> bounds<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        polygons<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>polygon<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// this.map.setFitView(); //地图自适应</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),k={id:"_2-通过datav-geoatlas获取区域的-geojson-数据-利用-amap-geojson-的-getpolygon-方法",tabindex:"-1"},d={class:"header-anchor",href:"#_2-通过datav-geoatlas获取区域的-geojson-数据-利用-amap-geojson-的-getpolygon-方法"},m={href:"http://datav.aliyun.com/portal/school/atlas/area_selector#&lat=30.332329214580188&lng=106.72278672066881&zoom=3.5",target:"_blank",rel:"noopener noreferrer"},v=a(`<div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">//获取geoJson数据</span>
api<span class="token punctuation">.</span><span class="token function">getJinchengJson</span><span class="token punctuation">(</span><span class="token string">&quot;data/map-json/ty.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">geoJSON</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> geojson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AMap<span class="token punctuation">.</span>GeoJSON</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">geoJSON</span><span class="token operator">:</span> geoJSON<span class="token punctuation">,</span>
    <span class="token comment">//指定面要素的绘制方式</span>
    <span class="token function-variable function">getPolygon</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">geojson<span class="token punctuation">,</span> lnglats</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token comment">//geojson为当前要素对应的GeoJSON对象，lnglats为对应的线的路径</span>
      <span class="token comment">//绘制多边形</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AMap<span class="token punctuation">.</span>Polygon</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">map</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>map<span class="token punctuation">,</span>
        <span class="token literal-property property">path</span><span class="token operator">:</span> lnglats<span class="token punctuation">,</span>
        <span class="token literal-property property">strokeWeight</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token literal-property property">strokeColor</span><span class="token operator">:</span> <span class="token string">&quot;#00FF00&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">fillColor</span><span class="token operator">:</span> <span class="token string">&quot;#099F3D&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">fillOpacity</span><span class="token operator">:</span> <span class="token number">0.3</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function g(y,b){const t=p("ExternalLinkIcon");return o(),l("div",null,[c(" more "),u,n("h3",k,[n("a",d,[n("span",null,[s("2.通过"),n("a",m,[s("DataV.GeoAtlas"),i(t)]),s("获取区域的 geoJson 数据,利用 AMap.GeoJSON 的 getPolygon()方法")])])]),v])}const f=e(r,[["render",g],["__file","gaode1.html.vue"]]),w=JSON.parse('{"path":"/note/map/gaode1.html","title":"绘制区域遮罩及边界线","lang":"zh-CN","frontmatter":{"title":"绘制区域遮罩及边界线","date":"2022-02-28T00:00:00.000Z","tag":["Map"],"category":["frontEnd"],"head":[["meta",{"property":"og:url","content":"https://xxdlh.github.io/note/map/gaode1.html"}],["meta",{"property":"og:site_name","content":"文档演示"}],["meta",{"property":"og:title","content":"绘制区域遮罩及边界线"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-18T03:09:53.000Z"}],["meta",{"property":"article:author","content":"星星的泪痕"}],["meta",{"property":"article:tag","content":"Map"}],["meta",{"property":"article:published_time","content":"2022-02-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-18T03:09:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"绘制区域遮罩及边界线\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-02-28T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-18T03:09:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"星星的泪痕\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"高德地图 绘制区域遮罩及边界线","slug":"高德地图-绘制区域遮罩及边界线","link":"#高德地图-绘制区域遮罩及边界线","children":[{"level":3,"title":"1.通过 AMap.DistrictSearch 搜索获取区域边界点，利用边界点信息通过 AMap.Polygon 绘制多边形","slug":"_1-通过-amap-districtsearch-搜索获取区域边界点-利用边界点信息通过-amap-polygon-绘制多边形","link":"#_1-通过-amap-districtsearch-搜索获取区域边界点-利用边界点信息通过-amap-polygon-绘制多边形","children":[]},{"level":3,"title":"2.通过DataV.GeoAtlas获取区域的 geoJson 数据,利用 AMap.GeoJSON 的 getPolygon()方法","slug":"_2-通过datav-geoatlas获取区域的-geojson-数据-利用-amap-geojson-的-getpolygon-方法","link":"#_2-通过datav-geoatlas获取区域的-geojson-数据-利用-amap-geojson-的-getpolygon-方法","children":[]}]}],"git":{"createdTime":1718680193000,"updatedTime":1718680193000,"contributors":[{"name":"薛涛涛","email":"xxdlhxue@163.com","commits":1}]},"readingTime":{"minutes":1.09,"words":327},"filePathRelative":"note/map/gaode1.md","localizedDate":"2022年2月28日","excerpt":""}');export{f as comp,w as data};
